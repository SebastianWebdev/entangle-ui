name: Deploy Storybook and Landing Page

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Storybook
        run: |
          # Build Storybook with proper base path
          npm run build-storybook -- --output-dir storybook-static
        env:
          NODE_ENV: production
      
      - name: Create deployment structure
        run: |
          # Debug: Show current directory structure
          echo "Current directory structure:"
          ls -la
          
          # Create the deployment directory
          mkdir -p deploy
          
          # Copy the landing page to root
          if [ -f "public/index.html" ]; then
            cp public/index.html deploy/index.html
            echo "‚úÖ Copied landing page from public/index.html"
          elif [ -f "index.html" ]; then
            cp index.html deploy/index.html
            echo "‚úÖ Copied landing page from root index.html"
          else
            echo "‚ùå No landing page found!"
            exit 1
          fi
          
          # Move storybook build to /storybook subdirectory
          if [ -d "storybook-static" ]; then
            # IMPORTANT: Move the entire directory contents
            mkdir -p deploy/storybook
            cp -r storybook-static/* deploy/storybook/
            echo "‚úÖ Copied Storybook to /storybook/"
            
            # Verify Storybook index.html exists
            if [ -f "deploy/storybook/index.html" ]; then
              echo "‚úÖ Storybook index.html confirmed at deploy/storybook/index.html"
            else
              echo "‚ùå Storybook index.html not found!"
              echo "Contents of storybook-static:"
              ls -la storybook-static/
              exit 1
            fi
          else
            echo "‚ùå Storybook build not found"
            exit 1
          fi
          
          # Create a .nojekyll file to prevent GitHub Pages Jekyll processing
          touch deploy/.nojekyll
          
          # IMPORTANT: Create a 404.html that redirects to root
          # This prevents the root index.html from being served for all routes
          cat > deploy/404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <title>404 - Page Not Found</title>
              <script>
                  // Simple 404 page - don't redirect
                  console.log('404 - Page not found');
              </script>
          </head>
          <body>
              <h1>404 - Page Not Found</h1>
              <p><a href="/">Go to home page</a></p>
          </body>
          </html>
          EOF
          
          # Verify the final structure
          echo "üìÅ Final deployment structure:"
          find deploy -type f -name "*.html" | sort
          
          # Double-check both index files exist
          if [ -f "deploy/index.html" ] && [ -f "deploy/storybook/index.html" ]; then
            echo "‚úÖ Both landing page and Storybook index files are ready"
            echo "Landing page size: $(wc -c < deploy/index.html) bytes"
            echo "Storybook index size: $(wc -c < deploy/storybook/index.html) bytes"
          else
            echo "‚ùå Missing required files"
            exit 1
          fi
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deploy'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4